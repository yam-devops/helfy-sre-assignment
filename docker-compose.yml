version: '3.8'

services:
  

  tidb:
    image: pingcap/tidb:latest
    command:
      - --store=tikv
      - --path=pd:2379
    depends_on:
      - pd
      - tikv
    ports:
      - "4000:4000"
      - "10080:10080"




  initdb:
    image: mysql:8
    depends_on:
      - tidb
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/db.sql
      - ./db/init-db.sh:/init-db.sh
    entrypoint: ["sh", "/init-db.sh"]
    tty: true




  pd:
    image: pingcap/pd:latest
    command:
      - --name=pd
      - --data-dir=/data/pd
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --initial-cluster=pd=http://pd:2380
      - --advertise-client-urls=http://pd:2379
      - --advertise-peer-urls=http://pd:2380
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - pd_data:/data/pd


  tikv:
    image: pingcap/tikv:latest
    command:
      - --addr=0.0.0.0:20160
      - --pd=pd:2379
      - --advertise-addr=tikv:20160
      - --data-dir=/data/tikv
    depends_on:
      - pd
    ports:
      - "20160:20160"
    volumes:
      - tikv_data:/data/tikv



  ticdc:
    image: pingcap/ticdc:latest
    command:
      - /cdc
      - "server"
      - "--pd=http://pd:2379"
      - "--data-dir=/data/ticdc"
    depends_on:
      - pd
      - tidb
      - kafka
    ports:
      - "8300:8300"
    volumes:
      - ticdc_data:/data/ticdc











  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  backend:
    build: ./server
    environment:
      - DB_HOST=tidb
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=app
      - JWT_SECRET=mysecret
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - tidb
      - kafka

  consumer:
    build: ./consumer
    depends_on:
      - kafka


  frontend:
    build: ./client
    ports:
      - "8080:80"
    depends_on:
      - backend




volumes:
  pd_data:
  tikv_data:
  ticdc_data:
